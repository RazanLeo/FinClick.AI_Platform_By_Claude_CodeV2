# Staging Nginx Configuration for FinClick.AI
user nginx;
worker_processes auto;
worker_rlimit_nofile 32768;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Staging logging format
    log_format staging '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '$request_time $upstream_response_time';

    access_log /var/log/nginx/access.log staging;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 50M;

    # Buffer settings
    client_body_buffer_size 512k;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 8k;

    # Timeout settings
    client_body_timeout 15s;
    client_header_timeout 15s;
    send_timeout 15s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=staging_api:10m rate=50r/m;
    limit_req_zone $binary_remote_addr zone=staging_general:10m rate=100r/m;

    # Cache settings
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=staging_cache:10m max_size=500m inactive=30m;

    # Staging upstream servers
    upstream staging_api_backend {
        server api-gateway:8000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream staging_frontend_backend {
        server frontend:80 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # HTTP to HTTPS redirect
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Health check for load balancer
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Main HTTPS server for staging
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name staging.finclick.ai;

        # SSL certificates (self-signed or Let's Encrypt for staging)
        ssl_certificate /etc/nginx/ssl/staging.finclick.ai.crt;
        ssl_certificate_key /etc/nginx/ssl/staging.finclick.ai.key;

        # Security headers specific to staging
        add_header X-Environment "staging" always;
        add_header X-Robots-Tag "noindex, nofollow" always;

        # Static files with moderate caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://staging_frontend_backend;
            proxy_cache staging_cache;
            proxy_cache_valid 200 1h;
            add_header Cache-Control "public, max-age=3600";
            add_header X-Cache-Status $upstream_cache_status;
        }

        # API routes
        location /api/ {
            # Rate limiting for staging API
            limit_req zone=staging_api burst=10 nodelay;

            proxy_pass http://staging_api_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Environment "staging";

            # No caching for API responses in staging
            proxy_cache off;
            proxy_no_cache 1;
            proxy_cache_bypass 1;

            # Staging-specific timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # WebSocket support
        location /ws/ {
            proxy_pass http://staging_api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # File uploads
        location /api/upload/ {
            client_max_body_size 50M;
            proxy_request_buffering off;

            proxy_pass http://staging_api_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "staging-healthy\n";
            add_header Content-Type text/plain;
            add_header X-Environment "staging";
        }

        # Staging-specific test endpoints
        location /test/ {
            proxy_pass http://staging_api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Environment "staging";
        }

        # Frontend application
        location / {
            limit_req zone=staging_general burst=20 nodelay;

            proxy_pass http://staging_frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Short caching for HTML in staging
            proxy_cache staging_cache;
            proxy_cache_valid 200 5m;
            add_header X-Cache-Status $upstream_cache_status;
            add_header X-Environment "staging";
        }

        # Staging authentication banner
        location /staging-banner.js {
            add_header Content-Type application/javascript;
            return 200 'console.log("%cðŸš§ STAGING ENVIRONMENT ðŸš§", "color: orange; font-size: 20px; font-weight: bold;");';
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /404.html {
            root /usr/share/nginx/html;
        }

        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Staging API subdomain
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name staging-api.finclick.ai;

        ssl_certificate /etc/nginx/ssl/staging-api.finclick.ai.crt;
        ssl_certificate_key /etc/nginx/ssl/staging-api.finclick.ai.key;

        # CORS for staging
        add_header Access-Control-Allow-Origin "https://staging.finclick.ai" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header X-Environment "staging" always;

        location / {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://staging.finclick.ai";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
                add_header Access-Control-Allow-Credentials "true";
                add_header X-Environment "staging";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }

            limit_req zone=staging_api burst=20 nodelay;

            proxy_pass http://staging_api_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Environment "staging";
        }
    }
}