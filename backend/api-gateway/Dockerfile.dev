# Development Dockerfile for FinClick.AI API Gateway
# Optimized for fast development with hot reloading and debugging

FROM node:18-alpine AS development

# Set development environment
ENV NODE_ENV=development
ENV DEBUG=finclick:*
ENV NODE_OPTIONS="--max-old-space-size=1024 --inspect=0.0.0.0:9229"

# Set working directory
WORKDIR /app

# Install development dependencies and tools
RUN apk add --no-cache \
    git \
    python3 \
    make \
    g++ \
    curl \
    bash \
    vim \
    procps \
    && rm -rf /var/cache/apk/*

# Install global development tools
RUN npm install -g nodemon concurrently

# Create non-root user for development
RUN addgroup -g 1001 -S appuser && \
    adduser -S -D -H -u 1001 -h /app -s /bin/bash -G appuser -g appuser appuser

# Copy package files
COPY --chown=appuser:appuser package*.json ./
COPY --chown=appuser:appuser yarn.lock* ./

# Install all dependencies (including dev dependencies)
RUN if [ -f yarn.lock ]; then \
        yarn install --frozen-lockfile; \
    else \
        npm ci; \
    fi

# Copy source code
COPY --chown=appuser:appuser . .

# Create development directories
RUN mkdir -p /app/logs /app/tmp /app/uploads /app/coverage && \
    chown -R appuser:appuser /app

# Expose ports (app port and debugger port)
EXPOSE 8000 9229

# Add development-specific labels
LABEL maintainer="FinClick.AI Team" \
      version="1.0.0-dev" \
      description="FinClick.AI API Gateway Development Image" \
      environment="development"

# Health check for development
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Switch to non-root user
USER appuser

# Start development server with hot reloading
CMD ["npm", "run", "dev"]