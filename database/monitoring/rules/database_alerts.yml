# Prometheus Alerting Rules for FinClick.AI Database Monitoring

groups:
  - name: postgresql_alerts
    rules:
      - alert: PostgreSQLDown
        expr: pg_up == 0
        for: 0m
        labels:
          severity: critical
          service: postgresql
        annotations:
          summary: "PostgreSQL instance is down"
          description: "PostgreSQL instance {{ $labels.instance }} has been down for more than 0 minutes."

      - alert: PostgreSQLHighConnections
        expr: (pg_stat_database_numbackends / pg_settings_max_connections) * 100 > 80
        for: 2m
        labels:
          severity: warning
          service: postgresql
        annotations:
          summary: "PostgreSQL high connection usage"
          description: "PostgreSQL instance {{ $labels.instance }} has {{ $value }}% connection usage."

      - alert: PostgreSQLSlowQueries
        expr: rate(pg_stat_activity_max_tx_duration[5m]) > 300
        for: 2m
        labels:
          severity: warning
          service: postgresql
        annotations:
          summary: "PostgreSQL slow queries detected"
          description: "PostgreSQL instance {{ $labels.instance }} has queries running longer than 5 minutes."

      - alert: PostgreSQLHighCPU
        expr: rate(pg_stat_bgwriter_buffers_alloc[5m]) > 1000
        for: 5m
        labels:
          severity: warning
          service: postgresql
        annotations:
          summary: "PostgreSQL high CPU usage"
          description: "PostgreSQL instance {{ $labels.instance }} is experiencing high CPU usage."

      - alert: PostgreSQLDeadlocks
        expr: rate(pg_stat_database_deadlocks[5m]) > 0
        for: 0m
        labels:
          severity: warning
          service: postgresql
        annotations:
          summary: "PostgreSQL deadlocks detected"
          description: "PostgreSQL instance {{ $labels.instance }} has {{ $value }} deadlocks per second."

      - alert: PostgreSQLDiskSpaceLow
        expr: (pg_database_size_bytes / (1024^3)) > 50
        for: 5m
        labels:
          severity: warning
          service: postgresql
        annotations:
          summary: "PostgreSQL database size is large"
          description: "PostgreSQL database {{ $labels.datname }} on {{ $labels.instance }} is {{ $value }}GB in size."

  - name: mongodb_alerts
    rules:
      - alert: MongoDBDown
        expr: mongodb_up == 0
        for: 0m
        labels:
          severity: critical
          service: mongodb
        annotations:
          summary: "MongoDB instance is down"
          description: "MongoDB instance {{ $labels.instance }} has been down for more than 0 minutes."

      - alert: MongoDBHighConnections
        expr: (mongodb_connections{state="current"} / mongodb_connections{state="available"}) * 100 > 80
        for: 2m
        labels:
          severity: warning
          service: mongodb
        annotations:
          summary: "MongoDB high connection usage"
          description: "MongoDB instance {{ $labels.instance }} has {{ $value }}% connection usage."

      - alert: MongoDBSlowOperations
        expr: rate(mongodb_op_counters_total[5m]) > 1000
        for: 5m
        labels:
          severity: warning
          service: mongodb
        annotations:
          summary: "MongoDB high operation rate"
          description: "MongoDB instance {{ $labels.instance }} has {{ $value }} operations per second."

      - alert: MongoDBReplicationLag
        expr: mongodb_replset_member_replication_lag > 10
        for: 2m
        labels:
          severity: warning
          service: mongodb
        annotations:
          summary: "MongoDB replication lag"
          description: "MongoDB replica {{ $labels.instance }} has {{ $value }} seconds replication lag."

      - alert: MongoDBHighMemoryUsage
        expr: (mongodb_memory{type="resident"} / mongodb_memory{type="virtual"}) * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: mongodb
        annotations:
          summary: "MongoDB high memory usage"
          description: "MongoDB instance {{ $labels.instance }} is using {{ $value }}% of available memory."

      - alert: MongoDBCollectionLockTime
        expr: rate(mongodb_locks_time_acquiring_global_microseconds_total[5m]) > 100000
        for: 2m
        labels:
          severity: warning
          service: mongodb
        annotations:
          summary: "MongoDB high lock acquisition time"
          description: "MongoDB instance {{ $labels.instance }} is experiencing high lock acquisition times."

  - name: redis_alerts
    rules:
      - alert: RedisDown
        expr: redis_up == 0
        for: 0m
        labels:
          severity: critical
          service: redis
        annotations:
          summary: "Redis instance is down"
          description: "Redis instance {{ $labels.instance }} has been down for more than 0 minutes."

      - alert: RedisHighMemoryUsage
        expr: (redis_memory_used_bytes / redis_memory_max_bytes) * 100 > 90
        for: 2m
        labels:
          severity: critical
          service: redis
        annotations:
          summary: "Redis high memory usage"
          description: "Redis instance {{ $labels.instance }} is using {{ $value }}% of available memory."

      - alert: RedisHighConnections
        expr: redis_connected_clients > 1000
        for: 2m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis high connection count"
          description: "Redis instance {{ $labels.instance }} has {{ $value }} connected clients."

      - alert: RedisSlowOperations
        expr: redis_slowlog_length > 10
        for: 2m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis slow operations detected"
          description: "Redis instance {{ $labels.instance }} has {{ $value }} slow operations in the log."

      - alert: RedisKeyEviction
        expr: rate(redis_evicted_keys_total[5m]) > 0
        for: 0m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis key eviction occurring"
          description: "Redis instance {{ $labels.instance }} is evicting {{ $value }} keys per second."

      - alert: RedisReplicationLag
        expr: redis_master_repl_offset - redis_slave_repl_offset > 1000
        for: 2m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis replication lag"
          description: "Redis slave {{ $labels.instance }} has {{ $value }} bytes replication lag."

      - alert: RedisRDBLastSaveFailed
        expr: redis_rdb_last_save_timestamp_seconds < (time() - 86400)
        for: 0m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis RDB last save is old"
          description: "Redis instance {{ $labels.instance }} last RDB save was more than 24 hours ago."

  - name: general_database_alerts
    rules:
      - alert: HighDiskUsage
        expr: (node_filesystem_avail_bytes{mountpoint="/var/lib"} / node_filesystem_size_bytes{mountpoint="/var/lib"}) * 100 < 20
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High disk usage on database storage"
          description: "Disk usage on {{ $labels.instance }} is above 80%."

      - alert: HighCPUUsage
        expr: 100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High CPU usage"
          description: "CPU usage on {{ $labels.instance }} is above 80%."

      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 90
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High memory usage"
          description: "Memory usage on {{ $labels.instance }} is above 90%."

      - alert: DatabaseBackupFailed
        expr: increase(backup_failed_total[24h]) > 0
        for: 0m
        labels:
          severity: critical
          service: backup
        annotations:
          summary: "Database backup failed"
          description: "Database backup for {{ $labels.database }} has failed in the last 24 hours."

      - alert: NoRecentBackup
        expr: time() - backup_last_success_timestamp > 86400
        for: 0m
        labels:
          severity: critical
          service: backup
        annotations:
          summary: "No recent database backup"
          description: "No successful backup for {{ $labels.database }} in the last 24 hours."