# Grafana Datasources Configuration for FinClick.AI
apiVersion: 1

datasources:
  # Primary Prometheus Datasource
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    editable: true
    jsonData:
      timeInterval: 15s
      queryTimeout: 60s
      httpMethod: POST
    secureJsonData:
      # Add authentication if needed

  # Elasticsearch for Logs
  - name: Elasticsearch
    type: elasticsearch
    access: proxy
    url: http://elasticsearch:9200
    database: "logstash-*"
    jsonData:
      interval: Daily
      timeField: "@timestamp"
      esVersion: "8.9.0"
      maxConcurrentShardRequests: 5
      includeFrozen: false
    secureJsonData:
      basicAuthPassword: ${ELASTIC_PASSWORD}
    basicAuth: true
    basicAuthUser: elastic

  # Loki for Log Aggregation (if available)
  - name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    jsonData:
      maxLines: 1000

  # InfluxDB for Time Series (if available)
  - name: InfluxDB
    type: influxdb
    access: proxy
    url: http://influxdb:8086
    database: finclick
    jsonData:
      httpMode: GET
    secureJsonData:
      password: ${INFLUXDB_PASSWORD}
    user: finclick

  # PostgreSQL for Application Data
  - name: PostgreSQL
    type: postgres
    url: postgres-master:5432
    database: ${POSTGRES_DB}
    user: ${POSTGRES_USER}
    secureJsonData:
      password: ${POSTGRES_PASSWORD}
    jsonData:
      sslmode: disable
      maxOpenConns: 10
      maxIdleConns: 2
      connMaxLifetime: 14400

  # MongoDB for Document Data
  - name: MongoDB
    type: grafana-mongodb-datasource
    url: mongodb://mongo-primary:27017
    database: ${MONGO_DB}
    jsonData:
      authType: credentials
    secureJsonData:
      username: ${MONGO_ROOT_USER}
      password: ${MONGO_ROOT_PASSWORD}

  # Redis for Cache Metrics
  - name: Redis
    type: redis-datasource
    url: redis://redis-master:6379
    jsonData:
      client: standalone
      poolSize: 5
      timeout: 10
      pingInterval: 0
      pipelineWindow: 0
    secureJsonData:
      password: ${REDIS_PASSWORD}

  # TestData for Development/Testing
  - name: TestData
    type: testdata
    access: proxy
    isDefault: false

  # CloudWatch (if using AWS)
  - name: CloudWatch
    type: cloudwatch
    jsonData:
      authType: keys
      defaultRegion: ${AWS_REGION}
    secureJsonData:
      accessKey: ${AWS_ACCESS_KEY_ID}
      secretKey: ${AWS_SECRET_ACCESS_KEY}